[Identification]
    OptionType = VIDEO
[Identify]
    read-syms Identification
    set Status     = STATUS_SUCCESSFUL
    set Identifier = $(OptionType)
    set Media      = #("Source Media Descriptions", 1, 1)
    Return $(Status) $(Identifier) $(Media)
[ServicesEntry]
    CurrentEntry = "" ? $(!LIBHANDLE) GetDevicemapValue Video \Device\Video0
[SystemVariables]
    STF_WINDOWSSYSPATH = "" ? $(!LIBHANDLE) GetWindowsNtSysDir
    STF_WINDOWSPATH = "" ? $(!LIBHANDLE) GetWindowsNtDir
    OemCodePage = "" ? $(!LIBHANDLE) GetOemCodepage
[MiniportDrivers]
    ati       = ati      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {ati,8514a}                   , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\ati.sys"      , 7, 1, {}         , ati-config
    cirrus    = cirrus   , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,cirrus,vga256,vga64k, necirrus} , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                     , 7, 1, {}         , noconfig
    dell_dgx  = dell_dgx , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {framebuf}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    et4000    = et4000   , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,w32,vga256,vga64k}       , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    jazzg300  = jazzg300 , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {framebuf}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    jazzg364  = jazzg364 , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {framebuf}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    jzvxl484  = jzvxl484 , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {jzvxl484}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    mga       = mga      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {mga}                         , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\mga.sys"      , 7, 1, {}         , noconfig
    ncr77c22  = ncr77c22 , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,vga256}                  , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    psidisp   = psidisp  , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {psidisp}                     , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    qv        = qv       , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,qv}                      , 1, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\qv.sys"       , 7, 1, {}         , noconfig
    s3        = s3       , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {s3}                          , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\s3.sys"       , 7, 1, {}         , noconfig
    tga       = tga      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {tga}                         , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    v7vram    = v7vram   , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,vga256}                  , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    wd90c24a  = wd90c24a , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {wd90c24a}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    wdvga     = wdvga    , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,vga256}                  , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
    weitekp9  = weitekp9 , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {weitekp9}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\weitekp9.sys" , 7, 1, {}         , weitekp9-config
    xga       = xga      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {xga, vga256}                 , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\xga.sys"      , 7, 1, {}         , noconfig
    ati8514a  = ati      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {8514a,ati}                   , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\ati.sys"      , 7, 0, {}         , noconfig
    i8514a    = 8514a    , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {8514a}                       , 0, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\8514a.sys"    , 7, 0, {}         , noconfig
    vga       = vga      , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_IGNORE, {vga}                         , 1, "%SystemRoot%\System32\IoLogMsg.dll;%SystemRoot%\System32\Drivers\vga.sys"      , 7, 0, {}         , noconfig
    videosim  = videosim , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_IGNORE, {framebuf}                    , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 0, {}         , noconfig
    trident   = trident  , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_NORMAL, {vga,vga256}                  , 1, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 0, {}         , noconfig
    vbemp    =  vbemp    , !SERVICE_KERNEL_DRIVER, Video, !SERVICE_ERROR_IGNORE, {framebuf,vga256,vga64k}      , 0, "%SystemRoot%\System32\IoLogMsg.dll"                                            , 7, 1, {}         , noconfig
[OpenGLDrivers]
[ExternalInstallOption]
    Set !G:DebugOutputControl = 0
    set Exit_Code   = $(!SETUP_ERROR_GENERAL)
    install LoadSetupLibrary
    ifstr(i)      $(STF_LANGUAGE)  == ""
        goto end
    else-ifstr(i) $(OPTION)        == ""
        goto end
    else-ifstr(i) $(INITSRC)       == ""
        goto end
    else-ifstr(i) $(ADDCOPY)       == ""
        goto end
    else-ifstr(i) $(DOCOPY)        == ""
        goto end
    else-ifstr(i) $(DOCONFIG)      == ""
        goto end
    else-ifstr(i) $(DOINSTALL)     == ""
        goto end
    else-ifstr(i) $(INFFILE)       == ""
        goto end
    endif
    LoadLibrary "x" $(!STF_CWDDIR)setupdll.dll !LIBHANDLE
    set STF_CONTROLSET = CurrentControlSet
    read-syms SystemVariables
    detect    SystemVariables
    shell $(INFFILE) InstallOption $(STF_LANGUAGE) $(OPTION) $(INITSRC) $(ADDCOPY) $(DOCOPY) $(DOCONFIG) $(DOINSTALL)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "Execing Configuring hardware failed"
        goto end
    endif
    ifstr(i) $($R0) == STATUS_SUCCESSFUL
        set Exit_Code = $(!SETUP_ERROR_SUCCESS)
    else-ifstr(i) $($R0) == STATUS_USERCANCEL
        set Exit_Code = $(!SETUP_ERROR_USERCANCEL)
    endif
end =+
    install   FreeSetupLibrary
    FreeLibrary $(!LIBHANDLE)
    exit
[InstallOption]
    set Status       = STATUS_FAILED
    set DrivesToFree = {}
    set !Option   = $($1)
    set SrcDir    = $($2)
    set AddCopy   = $($3)
    set DoCopy    = $($4)
    set DoConfig  = $($5)
    set DoInstall = $($6)
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) in $(LanguageList)
    else
        set Status = STATUS_NOLANGUAGE
        goto finish_InstallOption
    endif
    read-syms Strings$($0)
    ifstr(i) $(!Option) != "DETECT"
        set OptionList = ^(Options, 0)
        ifcontains $(!Option) in $(OptionList)
        else
            goto finish_InstallOption
        endif
        set OptionList = ""
        set DriverEntry       =   #(Options, $(!Option), 1)
        set MiniportDriver    =   #(MiniportDrivers, $(DriverEntry), 1)
        set InstalledDisplays =   #(MiniportDrivers, $(DriverEntry), 5)
        set OtherFiles        =   #(MiniportDrivers, $(DriverEntry), 10)
    endif
    read-syms ServicesEntry
    detect    ServicesEntry
    set DriversList        = ^(MiniportDrivers, 0)
    set MiniportDriverList = ^(Files-DisplayMiniportDrivers, 0)
    set DisplayDriverList  = ^(Files-DisplayDLLs, 0)
    set OpenGLDriverList   = ^(OpenGLDrivers, 0)
installtheoption = +
    ifstr(i) $(AddCopy) == "YES"
        ifstr(i) $(!Option) == "DETECT"
            set DoActualCopy = YES
        else
            set DoActualCopy = NO
            set FileToCheck = #(Files-DisplayMiniportDrivers, $(MiniportDriver), 2)
            LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\drivers\"$(FileToCheck)
            ifstr(i) $(STATUS) == NO
                set DoActualCopy = YES
                goto addfiles
            endif
            ForListDo $(OtherFiles)
                ifcontains $($) in $(MiniportDriverList)
                    set FileToCheck = #(Files-DisplayMiniportDrivers, $($), 2)
                    LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\drivers\"$(FileToCheck)
                    ifstr(i) $(STATUS) == NO
                        set DoActualCopy = YES
                        goto addfiles
                    endif
                endif
            EndForListDo
            ForListDo $(InstalledDisplays)
                ifcontains $($) in $(DisplayDriverList)
                    set FileToCheck = #(Files-DisplayDLLs, $($), 2)
                    LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\"$(FileToCheck)
                    ifstr(i) $(STATUS) == NO
                        set DoActualCopy = YES
                        goto addfiles
                    endif
                    ifcontains $($) in $(OpenGLDriverList)
                        set FileToCheck = #(Files-DisplayOpenGLDrivers, #(OpenGLDrivers, $($), 1), 2)
                        LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSSYSPATH)"\"$(FileToCheck)
                        ifstr(i) $(STATUS) == NO
                            set DoActualCopy = YES
                            goto addfiles
                        endif
                    endif
                endif
            EndForListDo
        endif
addfiles = +
        ifstr(i) $(DoActualCopy) == NO
            shell "subroutn.inf" DriversExist $($0) $(String1)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "VIDEO.INF: shelling DriversExist failed"
                goto finish_InstallOption
            endif
            ifstr(i) $($R0) == STATUS_CURRENT
            else-ifstr(i) $($R0) == STATUS_NEW
                set DoActualCopy = YES
            else-ifstr(i) $($R0) == STATUS_USERCANCEL
                Debug-Output "VIDEO.INF: User cancelled video installation"
                goto finish_InstallOption
            else
                Debug-Output "VIDEO.INF: Error reported in DriversExist routine in SUBROUTN.INF"
                goto finish_InstallOption
            endif
        endif
        ifstr(i) $(DoActualCopy) == YES
            shell "registry.inf" GetNTSource
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
            else-ifstr(i) $($R0) != STATUS_SUCCESSFUL
            else
                set SrcDir = $($R1)
            endif
            shell "subroutn.inf" DoAskSourceEx $(SrcDir) $(String2)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "VIDEO.INF: shelling DoAskSourceEx failed"
                goto finish_InstallOption
            endif
            ifstr(i) $($R0) == STATUS_SUCCESSFUL
                set SrcDir = $($R1)
                ifstr(i) $($R2) != ""
                    set DrivesToFree = >($(DrivesToFree), $($R2))
                endif
            else
                Debug-Output "VIDEO.INF: User cancelled asking source."
                goto finish_InstallOption
            endif
            ifstr(i) $(!Option) != "DETECT"
                install Install-AddCopyOption
            else
                install Install-AddAllCopy
            endif
            ifstr(i) $(STF_INSTALL_OUTCOME) != "STF_SUCCESS"
                Debug-Output "VIDEO.INF: Adding video files to copy list failed"
                goto finish_InstallOption
            endif
        else
            set DoCopy = NO
        endif
    endif
    ifstr(i) $(DoCopy) == "YES"
        read-syms ProgressCopy$($0)
        install Install-DoCopyOption
        ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_FAILURE"
            Debug-Output "Copying files failed"
            goto finish_InstallOption
        else-ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_USERQUIT"
            set Status = STATUS_USERCANCEL
            goto finish_InstallOption
        endif
    endif
    ifstr(i) $(DoConfig) == "YES"
        shell "registry.inf" CheckSetupModify
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto finish_InstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            goto finish_InstallOption
        endif
        ForListDo $(DriversList)
            ifstr(i) $(!Option) == "DETECT"
                set DriverEntry = $($)
                set DeviceDescription = ""
                set ErrorControl      = $(!SERVICE_ERROR_IGNORE)
                ifcontains #(MiniportDrivers, $(DriverEntry), 1) in $(MiniportDriverList)
                    ifint #(MiniportDrivers, $(DriverEntry), 9) == 1
                        set configDriver = YES
                    else
                        set configDriver = NO
                    endif
                else
                    set configDriver = NO
                endif
            else
                set DeviceDescription = $(!Option)
                set ErrorControl      = $(#(MiniportDrivers, $(DriverEntry), 4))
                ifstr(i) $(DriverEntry) == $($)
                    set configDriver = YES
                else
                    set configDriver = NO
                endif
            endif
            ifstr(i) $(configDriver) == YES
                Debug-Output "configuring the miniport driver"
                set MiniportDriver    =   #(MiniportDrivers, $(DriverEntry), 1)
                set Type              = $(#(MiniportDrivers, $(DriverEntry), 2))
                set Group             =   #(MiniportDrivers, $(DriverEntry), 3)
                set InstalledDisplays =   #(MiniportDrivers, $(DriverEntry), 5)
                set VgaCompatible     =   #(MiniportDrivers, $(DriverEntry), 6)
                set EventMessageFile  =   #(MiniportDrivers, $(DriverEntry), 7)
                set TypesSupported    =   #(MiniportDrivers, $(DriverEntry), 8)
                set ServiceNode   = $(DriverEntry)
                set ServiceBinary = %SystemRoot%\System32\drivers\#(Files-DisplayMiniportDrivers, $(MiniportDriver), 2)
                set ServicesValues = { +
                        {Type,           0, $(!REG_VT_DWORD),     $(Type)                  }, +
                        {Group,          0, $(!REG_VT_SZ),        $(Group)                 }, +
                        {ErrorControl,   0, $(!REG_VT_DWORD),     $(ErrorControl)          }, +
                        {BinaryPathName, 0, $(!REG_VT_EXPAND_SZ), $(ServiceBinary)         }  +
                        }
                ifstr(i) $(DoInstall) == "YES"
                    set ServicesValues = >($(ServicesValues), +
                            {Start,          0, $(!REG_VT_DWORD),     $(!SERVICE_SYSTEM_START) })
                else
                    set ServicesValues = >($(ServicesValues), +
                            {Start,          0, $(!REG_VT_DWORD),     $(!SERVICE_DISABLED)     })
                endif
                set !ParametersValues = { +
                        {"Device Description",        0, $(!REG_VT_SZ),       $(DeviceDescription) }, +
                        {InstalledDisplayDrivers,     0, $(!REG_VT_MULTI_SZ), $(InstalledDisplays) }, +
                        {VgaCompatible,               0, $(!REG_VT_DWORD),    $(VgaCompatible)     }, +
                        {DefaultSettings.BitsPerPel,  0, $(!REG_VT_DWORD),    0                    }, +
                        {DefaultSettings.VRefresh,    0, $(!REG_VT_DWORD),    0                    }, +
                        {DefaultSettings.Interlaced,  0, $(!REG_VT_DWORD),    0                    }, +
                        {DefaultSettings.XResolution, 0, $(!REG_VT_DWORD),    0                    }, +
                        {DefaultSettings.YResolution, 0, $(!REG_VT_DWORD),    0                    }  +
                        }
                ifstr(i) $(DoInstall) == "YES"
                    ifstr(i) $(!Option) != "DETECT"
                        shell "" #(MiniportDrivers, $(DriverEntry), 11)
                    endif
                endif
                set DeviceValues = {}
                set EventLogValues = { +
                        {EventMessageFile, 0, $(!REG_VT_EXPAND_SZ), $(EventMessageFile) }, +
                        {TypesSupported,   0, $(!REG_VT_DWORD),     $(TypesSupported)   }  +
                        }
                shell "registry.inf"  MakeServicesEntry $(ServiceNode)       +
                                                        $(ServicesValues)    +
                                                        $(!ParametersValues) +
                                                        $(DeviceValues)      +
                                                        $(EventLogValues)    +
                                                        Device0
                ifint $($ShellCode) != $(!SHELL_CODE_OK)
                    Debug-Output "Couldn't execute MakeServicesEntry in registry.inf"
                    goto finish_InstallOption
                endif
                ifstr(i) $($R0) != STATUS_SUCCESSFUL
                    Debug-Output "MakeServicesEntry failed for video"
                    goto finish_InstallOption
                endif
                ForListDo $(InstalledDisplays)
                    ifcontains $($) in $(OpenGLDriverList)
                        set KeyPath = { +
                                {SOFTWARE,       0, $(MaskAllAccess)}, +
                                {Microsoft,      0, $(MaskAllAccess)}, +
                                {"Windows NT",   0, $(MaskAllAccess)}, +
                                {CurrentVersion, 0, $(MaskAllAccess)}, +
                                {OpenGLDrivers,  0, $(MaskAllAccess)}  +
                                }
                        set KeyValue = { +
                                {$($), 0, $(!REG_VT_SZ), #(OpenGLDrivers, $($), 1) } +
                                }
                        shell "registry.inf" CreateKey $(!REG_H_LOCAL) $(KeyPath) $(KeyValue)
                        Debug-Output "just did an OGL section"
                        ifint $($ShellCode) != $(!SHELL_CODE_OK)
                            Debug-Output "Couldn't execute CreateKey in registry.inf"
                            goto endInstallOpenGLDriver
                        endif
                        ifstr(i) $($R0) != STATUS_SUCCESSFUL
                            Debug-Output "CreateKey failed for OGLDrivers"
                            goto endInstallOpenGLDriver
                        endif
                        Debug-Output "VIDEO.INF: success installing an ogl entry"
                    endif
                EndForListDo
            endif
        EndForListDo
    endif
    set Status = STATUS_SUCCESSFUL
finish_InstallOption = +
    ForListDo $(DrivesToFree)
        LibraryProcedure STATUS,$(!LIBHANDLE), DeleteNetConnection $($) "TRUE"
    EndForListDo
    Return $(Status)
[Install-AddCopyOption]
    Debug-Output "adding to copy list"
    set STF_VITAL = ""
    AddSectionKeyFileToCopyList   Files-DisplayMiniportDrivers   +
                                  $(MiniportDriver)              +
                                  $(SrcDir)                      +
                                  $(!STF_WINDOWSSYSPATH)\drivers
    ForListDo $(OtherFiles)
        ifcontains $($) in $(MiniportDriverList)
            Debug-Output "adding other files to copy list"
            AddSectionKeyFileToCopyList   Files-DisplayMiniportDrivers   +
                                          $($)                           +
                                          $(SrcDir)                      +
                                          $(!STF_WINDOWSSYSPATH)\drivers
        endif
    EndForListDo
    ForListDo $(InstalledDisplays)
        ifcontains $($) in $(DisplayDriverList)
            Debug-Output "adding display driver to copy list"
            AddSectionKeyFileToCopyList   Files-DisplayDLLs          +
                                          $($)                       +
                                          $(SrcDir)                  +
                                          $(!STF_WINDOWSSYSPATH)
            ifcontains $($) in $(OpenGLDriverList)
                Debug-Output "adding opengl driver to copy list"
                AddSectionKeyFileToCopyList   Files-DisplayOpenGLDrivers +
                                              #(OpenGLDrivers, $($), 1)  +
                                              $(SrcDir)                  +
                                              $(!STF_WINDOWSSYSPATH)
            endif
        endif
    EndForListDo
    exit
[Install-AddAllCopy]
    Debug-Output "adding all drivers to copy list"
    set STF_VITAL = ""
    AddSectionFilesToCopyList  Files-DisplayMiniportDrivers   +
                               $(SrcDir)                      +
                               $(!STF_WINDOWSSYSPATH)\drivers
    AddSectionFilesToCopyList  Files-DisplayDLLs            +
                               $(SrcDir)                    +
                               $(!STF_WINDOWSSYSPATH)
    exit
[Install-DoCopyOption]
    CopyFilesInCopyList
    exit
[noconfig]
    return
[ati-config]
    Debug-Output "Configuring ATI miniport"
    ifstr(i) $(!Option) == "ATI AST"
        set !ParametersValues = >($(!ParametersValues), +
                {"ATIOEM", 0, $(!REG_VT_SZ), "AST"})
    endif
    return
[weitekp9-config]
    Debug-Output "Configuring Weitek miniport"
    set !ParametersValues = >($(!ParametersValues), +
            {"DetectVLCards", 0, $(!REG_VT_DWORD), 1})
    set-title $(FunctionTitle)
    ifstr(i) $(!Option) == "Diamond Viper VLB"
        read-syms viper
    else-ifstr(i) $(!Option) == "Weitek P9000 Graphics Adapter"
        read-syms weitekp9000
    else
        set !ParametersValues = >($(!ParametersValues), +
                {"Membase", 0, $(!REG_VT_DWORD), 0})
        return
    endif
    read-syms dialog
    ui start "dialog"
    ifstr(i) $(DLGEVENT) == "CONTINUE"
        set Result = $(Combo1Out)
        debug-output $(Result)
        Set-HexToDec Result = $(Result)
        debug-output $(Result)
        set !ParametersValues = >($(!ParametersValues), +
                {"Membase", 0, $(!REG_VT_DWORD), $(Result)})
    else-ifstr(i) $(DLGEVENT) == "BACK"
    endif
    return
[viper]
    Combo1List = {20000000, 80000000, A0000000}
    Combo1Out  = 80000000
[weitekp9000]
    Combo1List = {04000000, 08000000, 0D000000, 0E000000, 0F000000, 80000000, C0000000, D0000000, E0000000, F0000000}
    Combo1Out  = 04000000
[dialog]
    FunctionTitle = "Device Base Address"
    Help = "&Help"
    Continue = "Continue"
    Cancel = "Cancel"
    Label1 = "&Base Address:"
    DlgType = "MultiCombo"
    DlgTemplate = "SINGLE_COMBO"
    Caption = $(FunctionTitle)
    ComboListItemsIn  = {Combo1List}
    ComboListItemsOut = {Combo1Out}
[FontResources-437]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-737]
    font96dpi  = 96,  {vgasysg.fon,  vgafixg.fon,  vga737.fon,  SSERIFEG.FON, COUREG.FON, SERIFEG.FON, SYMBOLE.FON, SMALLEG.FON}, vgasysg.fon,  vgafixg.fon,  vga737.fon,  SSERIFEG.FON, COUREG.FON, SERIFEG.FON, SYMBOLE.FON, SMALLEG.FON
    font120dpi = 120, {8514sysg.fon, 8514fixg.fon, 8514oemg.fon, SSERIFFG.FON, COURFG.FON, SERIFFG.FON, SYMBOLF.FON, SMALLFG.FON}, 8514sysg.fon, 8514fixg.fon, 8514oemg.fon, SSERIFFG.FON, COURFG.FON, SERIFFG.FON, SYMBOLF.FON, SMALLFG.FON
[FontResources-850]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-852]
    font96dpi  = 96,  {vgasyse.fon,  vgafixe.fon,  vga852.fon,  SSERIFEE.FON, COUREE.FON, SERIFEE.FON, SYMBOLE.FON, SMALLEE.FON}, vgasyse.fon,  vgafixe.fon,  vga852.fon,  SSERIFEE.FON, COUREE.FON, SERIFEE.FON, SYMBOLE.FON, SMALLEE.FON
    font120dpi = 120, {8514syse.fon, 8514fixe.fon, 8514oeme.fon, SSERIFFE.FON, COURFE.FON, SERIFFE.FON, SYMBOLF.FON, SMALLFE.FON}, 8514syse.fon, 8514fixe.fon, 8514oeme.fon, SSERIFFE.FON, COURFE.FON, SERIFFE.FON, SYMBOLF.FON, SMALLFE.FON
[FontResources-855]
    font96dpi  = 96,  {vgasysr.fon,  vgafixr.fon,  vga866.fon,  SSERIFER.FON, COURER.FON, SERIFER.FON, SYMBOLE.FON, SMALLER.FON}, vgasysr.fon,  vgafixr.fon,  vga866.fon,  SSERIFER.FON, COURER.FON, SERIFER.FON, SYMBOLE.FON, SMALLER.FON
    font120dpi = 120, {8514sysr.fon, 8514fixr.fon, 8514oemr.fon, SSERIFFR.FON, COURFR.FON, SERIFFR.FON, SYMBOLF.FON, SMALLFR.FON}, 8514sysr.fon, 8514fixr.fon, 8514oemr.fon, SSERIFFR.FON, COURFR.FON, SERIFFR.FON, SYMBOLF.FON, SMALLFR.FON
[FontResources-857]
    font96dpi  = 96,  {vgasyst.fon,  vgafixt.fon,  vga857.fon,  SSERIFET.FON, COURET.FON, SERIFET.FON, SYMBOLE.FON, SMALLET.FON}, vgasyst.fon,  vgafixt.fon,  vga857.fon,  SSERIFET.FON, COURET.FON, SERIFET.FON, SYMBOLE.FON, SMALLET.FON
    font120dpi = 120, {8514syst.fon, 8514fixt.fon, 8514oemt.fon, SSERIFFT.FON, COURFT.FON, SERIFFT.FON, SYMBOLF.FON, SMALLFT.FON}, 8514syst.fon, 8514fixt.fon, 8514oemt.fon, SSERIFFT.FON, COURFT.FON, SERIFFT.FON, SYMBOLF.FON, SMALLFT.FON
[FontResources-860]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-861]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-863]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-865]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vga850.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, vga850.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-866]
    font96dpi  = 96,  {vgasysr.fon,  vgafixr.fon,  vga866.fon,  SSERIFER.FON, COURER.FON, SERIFER.FON, SYMBOLE.FON, SMALLER.FON}, vgasysr.fon,  vgafixr.fon,  vga866.fon,  SSERIFER.FON, COURER.FON, SERIFER.FON, SYMBOLE.FON, SMALLER.FON
    font120dpi = 120, {8514sysr.fon, 8514fixr.fon, 8514oemr.fon, SSERIFFR.FON, COURFR.FON, SERIFFR.FON, SYMBOLF.FON, SMALLFR.FON}, 8514sysr.fon, 8514fixr.fon, 8514oemr.fon, SSERIFFR.FON, COURFR.FON, SERIFFR.FON, SYMBOLF.FON, SMALLFR.FON
[FontResources-869]
    font96dpi  = 96,  {vgasysg.fon,  vgafixg.fon,  vga737.fon,  SSERIFEG.FON, COUREG.FON, SERIFEG.FON, SYMBOLE.FON, SMALLEG.FON}, vgasysg.fon,  vgafixg.fon,  vga737.fon,  SSERIFEG.FON, COUREG.FON, SERIFEG.FON, SYMBOLE.FON, SMALLEG.FON
    font120dpi = 120, {8514sysg.fon, 8514fixg.fon, 8514oemg.fon, SSERIFFG.FON, COURFG.FON, SERIFFG.FON, SYMBOLF.FON, SMALLFG.FON}, 8514sysg.fon, 8514fixg.fon, 8514oemg.fon, SSERIFFG.FON, COURFG.FON, SERIFFG.FON, SYMBOLF.FON, SMALLFG.FON
[FontResources-932]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-936]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-949]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[FontResources-950]
    font96dpi  = 96,  {vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON}, vgasys.fon,  vgafix.fon,  vgaoem.fon,  SSERIFE.FON, COURE.FON, SERIFE.FON, SYMBOLE.FON, SMALLE.FON
    font120dpi = 120, {8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON}, 8514sys.fon, 8514fix.fon, 8514oem.fon, SSERIFF.FON, COURF.FON, SERIFF.FON, SYMBOLF.FON, SMALLF.FON
[ExternalFontInstallOption]
    Set !G:DebugOutputControl = 0
    set Exit_Code   = $(!SETUP_ERROR_GENERAL)
    install LoadSetupLibrary
    ifstr(i)      $(STF_LANGUAGE)  == ""
        goto end
    else-ifstr(i) $(OPTION)        == ""
        goto end
    else-ifstr(i) $(INITSRC)       == ""
        goto end
    else-ifstr(i) $(ADDCOPY)       == ""
        goto end
    else-ifstr(i) $(DOCOPY)        == ""
        goto end
    else-ifstr(i) $(DOCONFIG)      == ""
        goto end
    else-ifstr(i) $(INFFILE)       == ""
        goto end
    endif
    LoadLibrary "x" $(!STF_CWDDIR)setupdll.dll !LIBHANDLE
    set STF_CONTROLSET = CurrentControlSet
    read-syms SystemVariables
    detect    SystemVariables
    shell $(INFFILE) FontInstallOption $(STF_LANGUAGE) $(OPTION) $(INITSRC) $(ADDCOPY) $(DOCOPY) $(DOCONFIG)
    ifint $($ShellCode) != $(!SHELL_CODE_OK)
        Debug-Output "Execing Configuring hardware failed"
        goto end
    endif
    ifstr(i) $($R0) == STATUS_SUCCESSFUL
        set Exit_Code = $(!SETUP_ERROR_SUCCESS)
    else-ifstr(i) $($R0) == STATUS_USERCANCEL
        set Exit_Code = $(!SETUP_ERROR_USERCANCEL)
    endif
end =+
    install   FreeSetupLibrary
    FreeLibrary $(!LIBHANDLE)
    exit
[FontInstallOption]
    set Status       = STATUS_FAILED
    set DrivesToFree = {}
    set Option   = $($1)
    set SrcDir   = $($2)
    set AddCopy  = $($3)
    set DoCopy   = $($4)
    set DoConfig = $($5)
    set LanguageList = ^(LanguagesSupported, 1)
    Ifcontains(i) $($0) in $(LanguageList)
    else
        set Status = STATUS_NOLANGUAGE
        goto endFontInstallOption
    endif
    read-syms Strings$($0)
    set OptionList = ^(FontOptions, 0)
    ifcontains $(Option) in $(OptionList)
    else
        goto endFontInstallation
    endif
    Debug-Output "about to install the font option"
    set OptionList = ""
    read-syms SystemVariables
    detect    SystemVariables
    set FontSelection     = #(FontOptions, $(Option), 1)
    set LogPixels         = #(FontResources-$(OemCodePage), $(FontSelection), 1)
    set FontFileList      = #(FontResources-$(OemCodePage), $(FontSelection), 2)
installthefontoption = +
    ifstr(i) $(AddCopy) == "YES"
        set DoActualCopy = NO
        ForListDo $(FontFileList)
            set FileToCheck = $($)
            LibraryProcedure STATUS,$(!LIBHANDLE),CheckFileExistance $(!STF_WINDOWSPATH)"\system\"$(FileToCheck)
            ifstr(i) $(STATUS) == NO
                set DoActualCopy = YES
            endif
        EndForListDo
addfontfiles = +
        ifstr(i) $(DoActualCopy) == NO
            shell "subroutn.inf" DriversExist $($0) $(String1)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "VIDEO.INF: shelling DriversExist failed"
                goto endFontInstallOption
            endif
            ifstr(i) $($R0) == STATUS_CURRENT
            else-ifstr(i) $($R0) == STATUS_NEW
                set DoActualCopy = YES
            else-ifstr(i) $($R0) == STATUS_USERCANCEL
                Debug-Output "VIDEO.INF: User cancelled font installation"
                goto endFontInstallOption
            else
                Debug-Output "VIDEO.INF: Error reported in DriversExist routine in SUBROUTN.INF"
                goto endFontInstallOption
            endif
        endif
        ifstr(i) $(DoActualCopy) == YES
            shell "registry.inf" GetNTSource
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
            else-ifstr(i) $($R0) != STATUS_SUCCESSFUL
            else
                set SrcDir = $($R1)
            endif
            shell "subroutn.inf" DoAskSourceEx $(SrcDir) $(String2)
            ifint $($ShellCode) != $(!SHELL_CODE_OK)
                Debug-Output "VIDEO.INF: shelling DoAskSourceEx failed"
                goto endFontInstallOption
            endif
            ifstr(i) $($R0) == STATUS_SUCCESSFUL
                set SrcDir = $($R1)
                ifstr(i) $($R2) != ""
                    set DrivesToFree = >($(DrivesToFree), $($R2))
                endif
            else
                Debug-Output "VIDEO.INF: User cancelled asking source."
                goto endFontInstallOption
            endif
            install InstallFont-AddCopyOption
            ifstr(i) $(STF_INSTALL_OUTCOME) != "STF_SUCCESS"
                Debug-Output "VIDEO.INF: Adding fontideo files to copy list failed"
                goto endFontInstallOption
            endif
        else
            set DoCopy = NO
        endif
    endif
    ifstr(i) $(DoCopy) == "YES"
        read-syms ProgressCopy$($0)
        install InstallFont-DoCopyOption
        ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_FAILURE"
            Debug-Output "Copying files failed"
            goto endFontInstallOption
        else-ifstr(i) $(STF_INSTALL_OUTCOME) == "STF_USERQUIT"
            set Status = STATUS_USERCANCEL
            goto endFontInstallOption
        endif
    endif
    ifstr(i) $(DoConfig) == "YES"
        shell "registry.inf" CheckSetupModify
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            goto endFontInstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            goto endFontInstallOption
        endif
        set KeyPath = { +
                {SOFTWARE,       0, $(MaskAllAccess)}, +
                {Microsoft,      0, $(MaskAllAccess)}, +
                {"Windows NT",   0, $(MaskAllAccess)}, +
                {CurrentVersion, 0, $(MaskAllAccess)}, +
                {GRE_Initialize, 0, $(MaskAllAccess)}  +
                }
        set KeyValues = { +
                {FONTS.FON,      0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 3) }, +
                {FIXEDFON.FON,   0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 4) }, +
                {OEMFONT.FON,    0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 5) }  +
                }
        shell "registry.inf" CreateKey $(!REG_H_LOCAL) $(KeyPath) $(KeyValues)
        Debug-Output "just did the GRE_Ini font section"
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "Couldn't execute CreateKey in registry.inf"
            goto endFontInstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            Debug-Output "CreateKey failed for GRE_Iinitialize"
            goto endFontInstallOption
        endif
        set KeyPath = { +
                {SOFTWARE,       0, $(MaskAllAccess)}, +
                {Microsoft,      0, $(MaskAllAccess)}, +
                {"Windows NT",   0, $(MaskAllAccess)}, +
                {CurrentVersion, 0, $(MaskAllAccess)}, +
                {Fonts,          0, $(MaskAllAccess)}  +
                }
        set KeyValues = { +
                {"MS Sans Serif 8,10,12,14,18,24 (VGA res)", 0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 6 ) }, +
                {"Courier 10,12,15 (VGA res)",               0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 7 ) }, +
                {"MS Serif 8,10,12,14,18,24 (VGA res)",      0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 8 ) }, +
                {"Symbol 8,10,12,14,18,24 (VGA res)",        0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 9 ) }, +
                {"Small Fonts (VGA res)",                    0, $(!REG_VT_SZ), #(FontResources-$(OemCodePage), $(FontSelection), 10) }  +
                }
        shell "registry.inf" CreateKey $(!REG_H_LOCAL) $(KeyPath) $(KeyValues)
        Debug-Output "just did the second font section"
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "Couldn't execute CreateKey in registry.inf"
            goto endFontInstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            Debug-Output "CreateKey failed for Fonts"
            goto endFontInstallOption
        endif
        set KeyPath = { +
                {SOFTWARE,       0, $(MaskAllAccess)}, +
                {Microsoft,      0, $(MaskAllAccess)}, +
                {"Windows NT",   0, $(MaskAllAccess)}, +
                {CurrentVersion, 0, $(MaskAllAccess)}, +
                {FontDPI,        0, $(MaskAllAccess)}  +
                }
        set KeyValues = { +
                {"LogPixels",  0, $(!REG_VT_DWORD), $(LogPixels) }  +
                }
        shell "registry.inf" CreateKey $(!REG_H_LOCAL) $(KeyPath) $(KeyValues)
        Debug-Output "just did the second font section"
        ifint $($ShellCode) != $(!SHELL_CODE_OK)
            Debug-Output "Couldn't execute CreateKey in registry.inf"
            goto endFontInstallOption
        endif
        ifstr(i) $($R0) != STATUS_SUCCESSFUL
            Debug-Output "CreateKey failed for FontSize"
            goto endFontInstallOption
        endif
        goto configfontdone
errorfontconfig = +
        goto endFontInstallOption
configfontdone = +
    endif
    set Status = STATUS_SUCCESSFUL
endFontInstallOption = +
    ForListDo $(DrivesToFree)
        LibraryProcedure STATUS,$(!LIBHANDLE), DeleteNetConnection $($) "TRUE"
    EndForListDo
    Return $(Status)
[InstallFont-AddCopyOption]
    set STF_VITAL = ""
    set STF_OVERWRITE = NEVER
    AddSectionFilesToCopyList  Files-DisplayFonts$(LogPixels)-$(OemCodePage) +
                               $(SrcDir)                      +
                               $(!STF_WINDOWSPATH)\system
    exit
[InstallFont-DoCopyOption]
    CopyFilesInCopyList
    exit
[Source Media Descriptions]
     1 = "Windows NT Workstation CD-ROM or Setup Disk #4" , TAGFILE = disk1.w
     2 = "Windows NT Workstation CD-ROM or Setup Disk #5" , TAGFILE = disk2.w
     3 = "Windows NT Workstation CD-ROM or Setup Disk #6" , TAGFILE = disk3.w
     4 = "Windows NT Workstation CD-ROM or Setup Disk #7" , TAGFILE = disk4.w
     5 = "Windows NT Workstation CD-ROM or Setup Disk #8" , TAGFILE = disk5.w
     6 = "Windows NT Workstation CD-ROM or Setup Disk #9" , TAGFILE = disk6.w
     7 = "Windows NT Workstation CD-ROM or Setup Disk #10", TAGFILE = disk7.w
     8 = "Windows NT Workstation CD-ROM or Setup Disk #11", TAGFILE = disk8.w
     9 = "Windows NT Workstation CD-ROM or Setup Disk #12", TAGFILE = disk9.w
    10 = "Windows NT Workstation CD-ROM or Setup Disk #13", TAGFILE = disk10.w
    11 = "Windows NT Workstation CD-ROM or Setup Disk #14", TAGFILE = disk11.w
    12 = "Windows NT Workstation CD-ROM or Setup Disk #15", TAGFILE = disk12.w
    13 = "Windows NT Workstation CD-ROM or Setup Disk #16", TAGFILE = disk13.w
    14 = "Windows NT Workstation CD-ROM or Setup Disk #17", TAGFILE = disk14.w
    15 = "Windows NT Workstation CD-ROM or Setup Disk #18", TAGFILE = disk15.w
    16 = "Windows NT Workstation CD-ROM or Setup Disk #19", TAGFILE = disk16.w
    17 = "Windows NT Workstation CD-ROM or Setup Disk #20", TAGFILE = disk17.w
    18 = "Windows NT Workstation CD-ROM or Setup Disk #21", TAGFILE = disk18.w
    19 = "Windows NT Workstation CD-ROM or Setup Disk #22", TAGFILE = disk19.w
    20 = "Windows NT Workstation CD-ROM or Setup Disk #23", TAGFILE = disk20.w
    21 = "Windows NT Workstation CD-ROM or Setup Disk #24", TAGFILE = disk21.w
    22 = "Windows NT Workstation CD-ROM or Setup Disk #25", TAGFILE = disk22.w
    23 = "Windows NT Workstation CD-ROM or Setup Disk #26", TAGFILE = disk23.w
    24 = "Windows NT Workstation CD-ROM or Setup Disk #27", TAGFILE = disk24.w
    25 = "Windows NT Workstation CD-ROM or Setup Disk #28", TAGFILE = disk25.w
    26 = "Windows NT Workstation CD-ROM or Setup Disk #29", TAGFILE = disk26.w
    27 = "Windows NT Workstation CD-ROM or Setup Disk #30", TAGFILE = disk27.w
    28 = "Windows NT Workstation CD-ROM or Setup Disk #31", TAGFILE = disk28.w
    29 = "Windows NT Workstation CD-ROM or Setup Disk #32", TAGFILE = disk29.w
    30 = "Windows NT Workstation CD-ROM or Setup Disk #33", TAGFILE = disk30.w
[Signature]
    FileType = MICROSOFT_FILE
[GetSignature]
    read-syms Signature
    return $(FileType)
[ProductType]
STF_PRODUCT  = Winnt
STF_PLATFORM = I386
[Files-DisplayDLLs]
8514a = 6,8514A.DLL , SIZE=43008
ati = 5,ATI.DLL , SIZE=88064
cirrus = 6,CIRRUS.DLL , SIZE=59392
framebuf = 7,FRAMEBUF.DLL , SIZE=13312
mga = 5,MGA.DLL , SIZE=80896
qv = 6,QV.DLL , SIZE=46080
s3 = 5,S3.DLL , SIZE=81920
vga = 5,VGA.DLL , SIZE=91136
vga256 = 6,VGA256.DLL , SIZE=57344
vga64k = 7,VGA64K.DLL , SIZE=22528
w32 = 6,W32.DLL , SIZE=58368
weitekp9 = 6,WEITEKP9.DLL , SIZE=47104
xga = 7,XGA.DLL , SIZE=16384
[Files-DisplayFonts120-437]
19,8514FIX.FON , SIZE=11264
19,8514OEM.FON , SIZE=12288
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-737]
16,8514FIXG.FON , SIZE=11264
16,8514OEMG.FON , SIZE=13312
16,8514SYSG.FON , SIZE=10240
7,COURFG.FON , SIZE=31744
7,SERIFFG.FON , SIZE=24576
16,SMALLFG.FON , SIZE=21504
16,SSERIFFG.FON , SIZE=91136
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-850]
19,8514FIX.FON , SIZE=11264
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
7,VGA850.FON , SIZE=6144
[Files-DisplayFonts120-852]
16,8514FIXE.FON , SIZE=12288
16,8514OEME.FON , SIZE=13312
16,8514SYSE.FON , SIZE=11264
7,COURFE.FON , SIZE=32768
5,SERIFFE.FON , SIZE=86016
16,SMALLFE.FON , SIZE=20480
16,SSERIFFE.FON , SIZE=93184
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-855]
16,8514FIXR.FON , SIZE=12288
16,8514OEMR.FON , SIZE=13312
16,8514SYSR.FON , SIZE=11264
7,COURFR.FON , SIZE=32768
5,SERIFFR.FON , SIZE=91136
16,SMALLFR.FON , SIZE=20480
16,SSERIFFR.FON , SIZE=99328
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-857]
16,8514FIXT.FON , SIZE=12288
16,8514OEMT.FON , SIZE=13312
16,8514SYST.FON , SIZE=10240
7,COURFT.FON , SIZE=31744
5,SERIFFT.FON , SIZE=81920
16,SMALLFT.FON , SIZE=22528
16,SSERIFFT.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-860]
19,8514FIX.FON , SIZE=11264
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
7,VGA850.FON , SIZE=6144
[Files-DisplayFonts120-861]
19,8514FIX.FON , SIZE=11264
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
7,VGA850.FON , SIZE=6144
[Files-DisplayFonts120-863]
19,8514FIX.FON , SIZE=11264
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
7,VGA850.FON , SIZE=6144
[Files-DisplayFonts120-865]
19,8514FIX.FON , SIZE=11264
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
7,VGA850.FON , SIZE=6144
[Files-DisplayFonts120-866]
16,8514FIXR.FON , SIZE=12288
16,8514OEMR.FON , SIZE=13312
16,8514SYSR.FON , SIZE=11264
7,COURFR.FON , SIZE=32768
5,SERIFFR.FON , SIZE=91136
16,SMALLFR.FON , SIZE=20480
16,SSERIFFR.FON , SIZE=99328
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-869]
16,8514FIXG.FON , SIZE=11264
16,8514OEMG.FON , SIZE=13312
16,8514SYSG.FON , SIZE=10240
7,COURFG.FON , SIZE=31744
7,SERIFFG.FON , SIZE=24576
16,SMALLFG.FON , SIZE=21504
16,SSERIFFG.FON , SIZE=91136
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-932]
19,8514FIX.FON , SIZE=11264
19,8514OEM.FON , SIZE=12288
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-936]
19,8514FIX.FON , SIZE=11264
19,8514OEM.FON , SIZE=12288
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-949]
19,8514FIX.FON , SIZE=11264
19,8514OEM.FON , SIZE=12288
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts120-950]
19,8514FIX.FON , SIZE=11264
19,8514OEM.FON , SIZE=12288
19,8514SYS.FON , SIZE=10240
7,COURF.FON , SIZE=31744
5,SERIFF.FON , SIZE=81920
16,SMALLF.FON , SIZE=21504
5,SSERIFF.FON , SIZE=90112
15,SYMBOLF.FON , SIZE=81920
[Files-DisplayFonts96-437]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGAFIX.FON , SIZE=6144
7,VGAOEM.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-737]
7,COUREG.FON , SIZE=23552
7,SERIFEG.FON , SIZE=18432
16,SMALLEG.FON , SIZE=26624
16,SSERIFEG.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
16,VGA737.FON , SIZE=6144
16,VGAFIXG.FON , SIZE=6144
16,VGASYSG.FON , SIZE=8192
[Files-DisplayFonts96-850]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGA850.FON , SIZE=6144
7,VGAFIX.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-852]
7,COUREE.FON , SIZE=23552
6,SERIFEE.FON , SIZE=60416
16,SMALLEE.FON , SIZE=25600
16,SSERIFEE.FON , SIZE=66560
17,SYMBOLE.FON , SIZE=57344
16,VGA852.FON , SIZE=6144
16,VGAFIXE.FON , SIZE=7168
16,VGASYSE.FON , SIZE=8192
[Files-DisplayFonts96-855]
7,COURER.FON , SIZE=24576
6,SERIFER.FON , SIZE=64512
16,SMALLER.FON , SIZE=25600
16,SSERIFER.FON , SIZE=69632
17,SYMBOLE.FON , SIZE=57344
16,VGA866.FON , SIZE=6144
16,VGAFIXR.FON , SIZE=7168
16,VGASYSR.FON , SIZE=8192
[Files-DisplayFonts96-857]
7,COURET.FON , SIZE=23552
6,SERIFET.FON , SIZE=58368
16,SMALLET.FON , SIZE=20480
16,SSERIFET.FON , SIZE=64512
17,SYMBOLE.FON , SIZE=57344
16,VGA857.FON , SIZE=6144
16,VGAFIXT.FON , SIZE=6144
16,VGASYST.FON , SIZE=7168
[Files-DisplayFonts96-860]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGA850.FON , SIZE=6144
16,VGA860.FON , SIZE=6144
7,VGAFIX.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-861]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGA850.FON , SIZE=6144
16,VGA861.FON , SIZE=6144
7,VGAFIX.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-863]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGA850.FON , SIZE=6144
16,VGA863.FON , SIZE=6144
7,VGAFIX.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-865]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGA850.FON , SIZE=6144
16,VGA865.FON , SIZE=6144
7,VGAFIX.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-866]
7,COURER.FON , SIZE=24576
6,SERIFER.FON , SIZE=64512
16,SMALLER.FON , SIZE=25600
16,SSERIFER.FON , SIZE=69632
17,SYMBOLE.FON , SIZE=57344
16,VGA866.FON , SIZE=6144
16,VGAFIXR.FON , SIZE=7168
16,VGASYSR.FON , SIZE=8192
[Files-DisplayFonts96-869]
7,COUREG.FON , SIZE=23552
7,SERIFEG.FON , SIZE=18432
16,SMALLEG.FON , SIZE=26624
16,SSERIFEG.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
16,VGA869.FON , SIZE=6144
16,VGAFIXG.FON , SIZE=6144
16,VGASYSG.FON , SIZE=8192
[Files-DisplayFonts96-932]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGAFIX.FON , SIZE=6144
7,VGAOEM.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-936]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGAFIX.FON , SIZE=6144
7,VGAOEM.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-949]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGAFIX.FON , SIZE=6144
7,VGAOEM.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayFonts96-950]
7,COURE.FON , SIZE=23552
6,SERIFE.FON , SIZE=58368
16,SMALLE.FON , SIZE=26624
6,SSERIFE.FON , SIZE=65536
17,SYMBOLE.FON , SIZE=57344
7,VGAFIX.FON , SIZE=6144
7,VGAOEM.FON , SIZE=6144
7,VGASYS.FON , SIZE=8192
[Files-DisplayMiniportDrivers]
8514a = 7,8514A.SYS , SIZE=6144
ati = 6,ATI.SYS , SIZE=73728
cirrus = 7,CIRRUS.SYS , SIZE=30720
dell_dgx = 7,DELL_DGX.SYS , SIZE=9216
et4000 = 7,ET4000.SYS , SIZE=24576
mga = 5,MGA.SYS , SIZE=99328
ncr77c22 = 7,NCR77C22.SYS , SIZE=20480
qv = 7,QV.SYS , SIZE=30720
s3 = 6,S3.SYS , SIZE=50176
trident = 7,TRIDENT.SYS , SIZE=20480
v7vram = 7,V7VRAM.SYS , SIZE=20480
vga = 7,VGA.SYS , SIZE=15360
videosim = 7,VIDEOSIM.SYS , SIZE=4096
wdvga = 7,WDVGA.SYS , SIZE=17408
weitekp9 = 6,WEITEKP9.SYS , SIZE=33792
xga = 7,XGA.SYS , SIZE=16384
vbemp = 7,VBEMP.SYS , SIZE=22284
[LanguagesSupported]
    ENG
[Options]
    "VGA Compatible Graphics Adapter"       = vga
    "8514/A Compatible Graphics Adapter"    = i8514a
    "#9 GXE"                                = s3
    "#9 GXE64"                              = s3
    "#9 GXE64 Pro"                          = s3
    "#9 GXE TRIO 64"                        = s3
    "Actix Graphics Engine"                 = S3
    "Actix Graphics Engine 32"              = S3
    "Actix Graphics Engine 32 Plus"         = S3
    "Actix ProStar VLB"                     = cirrus
    "ATI 8514/Ultra"                        = ati8514a
    "ATI 8514/A Compatible"                 = ati8514a
    "ATI AST"                               = ati
    "ATI Graphics Compatible Adapter"       = ati
    "ATI Graphics Pro Turbo"                = ati
    "ATI Graphics ULTRA"                    = ati
    "ATI Graphics ULTRA+"                   = ati
    "ATI Graphics ULTRA Pro"                = ati
    "ATI Graphics Vantage"                  = ati
    "ATI Graphics Wonder"                   = ati
    "ATI Graphics Xpression"                = ati
    "ATI Mach 32"                           = ati
    "ATI Mach 64 GX"                        = ati
    "ATI Win Turbo"                         = ati
    "Cardex VLB"                            = cirrus
    "Cirrus Compatible Graphics Adapter"    = cirrus
    "Compaq QVision 1024/E"                 = qv
    "Compaq QVision 1024/E Enhanced"        = qv
    "Compaq QVision 1024/I"                 = qv
    "Compaq QVision 1024/I Enhanced"        = qv
    "Compaq QVision 1280/E"                 = qv
    "Compaq QVision 1280/I"                 = qv
    "Compaq QVision 2000"                   = mga
    "Dell DGX"                              = dell_dgx
    "Diamond Speedstar VGA"                 = et4000
    "Diamond Speedstar 24X"                 = wdvga
    "Diamond Speedstar 64"                  = cirrus
    "Diamond Speedstar Pro"                 = cirrus
    "Diamond Speedstar SE"                  = cirrus
    "Diamond Stealth 24"                    = s3
    "Diamond Stealth 32"                    = et4000
    "Diamond Stealth 64"                    = s3
    "Diamond Stealth 64 DRAM"               = s3
    "Diamond Stealth Pro"                   = s3
    "Diamond Stealth SE"                    = s3
    "Diamond Stealth Video 64"              = s3
    "Diamond Stealth Video 64 DRAM"         = s3
    "Diamond Stealth VRAM"                  = s3
    "Diamond Viper PCI"                     = weitekp9
    "Diamond Viper PRO"                     = weitekp9
    "Diamond Viper SE"                      = weitekp9
    "Diamond Viper VLB"                     = weitekp9
    "Digital PCXAG-AL"                      = s3
    "Digital S3-928"                        = s3
    "ELSA Winner 1000"                      = s3
    "Genoa VLB 8900VL Phantom 32i"          = et4000
    "Genoa PCI 8900 Phantom 32i"            = et4000
    "Headless Server"                       = videosim
    "Hercules Dynamite Power"               = et4000
    "IBM XGA"                               = xga
    "IBM XGA-2"                             = xga
    "Matrox MGA Impression Plus"            = mga
    "Matrox MGA Impression"                 = mga
    "Matrox MGA Ultima Plus"                = mga
    "Matrox MGA Ultima"                     = mga
    "Media Vision Thunder & Lightning"      = cirrus
    "Metheus Premier 928"                   = s3
    "MGA Compatible Graphics Adapter"       = mga
    "Micronics VL-Bus"                      = s3
    "miroCRYSTAL 20SD"                      = s3
    "NCR 32BLT"                             = ncr77c22
    "NCR 77C22"                             = ncr77c22
    "NCR 77C22E"                            = ncr77c22
    "Orchid Fahrenheit 1280"                = s3
    "Orchid Fahrenheit 1280 Plus"           = s3
    "Orchid Fahrenheit VA"                  = s3
    "Orchid Fahrenheit VA/VLB"              = s3
    "Orchid Kelvin 64"                      = cirrus
    "Orchid Kelvin EZ"                      = cirrus
    "Orchid ProDesigner 2"                  = et4000
    "Orchid ProDesigner IIs"                = et4000
    "Paradise Windows Graphics Accelerator" = wdvga
    "S3 Compatible Graphics Adapter"        = s3
    "STB Lightspeed"                        = et4000
    "Trident 8900C"                         = trident
    "Trident 9000"                          = trident
    "Trident Compatible Graphics Adapter"   = trident
    "Tseng Labs ET4000"                     = et4000
    "Tseng Labs W32"                        = et4000
    "Video Seven VRAM I"                    = v7vram
    "Video Seven VRAM II"                   = v7vram
    "Video Seven VRAM II Ergo"              = v7vram
    "Weitek P9000 Graphics Adapter"         = weitekp9
    "Weitek P9100 Graphics Adapter"         = weitekp9
    "Western Digital Graphics Adapter"      = wdvga
    "Wizard 9000VL"                         = weitekp9
    "VBE 1.2/2.0/3.0 Miniport"              = vbemp
[FontOptions]
    "Small"  = font96dpi
    "Large"  = font120dpi
[OptionsTextENG]
    "VGA Compatible Graphics Adapter"       = "VGA Compatible Graphics Adapter"
    "8514/A Compatible Graphics Adapter"    = "8514/A Compatible Graphics Adapter"
    "#9 GXE"                                = "#9 GXE"
    "#9 GXE64"                              = "#9 GXE64"
    "#9 GXE64 Pro"                          = "#9 GXE64 Pro"
    "#9 GXE TRIO 64"                        = "#9 GXE TRIO 64"
    "Actix Graphics Engine"                 = "Actix Graphics Engine"
    "Actix Graphics Engine 32"              = "Actix Graphics Engine 32"
    "Actix Graphics Engine 32 Plus"         = "Actix Graphics Engine 32 Plus"
    "Actix ProStar VLB"                     = "Actix ProStar VLB"
    "ATI 8514/Ultra"                        = "ATI 8514/Ultra"
    "ATI 8514/A Compatible"                 = "ATI 8514/A Compatible"
    "ATI AST"                               = "ATI AST"
    "ATI Graphics Compatible Adapter"       = "ATI Graphics Compatible Adapter"
    "ATI Graphics Pro Turbo"                = "ATI Graphics Pro Turbo"
    "ATI Graphics ULTRA"                    = "ATI Graphics ULTRA"
    "ATI Graphics ULTRA+"                   = "ATI Graphics ULTRA+"
    "ATI Graphics ULTRA Pro"                = "ATI Graphics ULTRA Pro"
    "ATI Graphics Vantage"                  = "ATI Graphics Vantage"
    "ATI Graphics Wonder"                   = "ATI Graphics Wonder"
    "ATI Graphics Xpression"                = "ATI Graphics Xpression"
    "ATI Mach 32"                           = "ATI Mach 32"
    "ATI Mach 64 GX"                        = "ATI Mach 64 GX"
    "ATI Win Turbo"                         = "ATI Win Turbo"
    "Cardex VLB"                            = "Cardex VLB"
    "Cirrus Compatible Graphics Adapter"    = "Cirrus Compatible Graphics Adapter"
    "Compaq QVision 1024/E"                 = "Compaq QVision 1024/E"
    "Compaq QVision 1024/E Enhanced"        = "Compaq QVision 1024/E Enhanced"
    "Compaq QVision 1024/I"                 = "Compaq QVision 1024/I"
    "Compaq QVision 1024/I Enhanced"        = "Compaq QVision 1024/I Enhanced"
    "Compaq QVision 1280/E"                 = "Compaq QVision 1280/E"
    "Compaq QVision 1280/I"                 = "Compaq QVision 1280/I"
    "Compaq QVision 2000"                   = "Compaq QVision 2000"
    "Dell DGX"                              = "Dell DGX"
    "Diamond Speedstar VGA"                 = "Diamond Speedstar VGA"
    "Diamond Speedstar 24X"                 = "Diamond Speedstar 24X"
    "Diamond Speedstar 64"                  = "Diamond Speedstar 64"
    "Diamond Speedstar Pro"                 = "Diamond Speedstar Pro"
    "Diamond Speedstar SE"                  = "Diamond Speedstar SE"
    "Diamond Stealth 24"                    = "Diamond Stealth 24"
    "Diamond Stealth 32"                    = "Diamond Stealth 32"
    "Diamond Stealth 64"                    = "Diamond Stealth 64"
    "Diamond Stealth 64 DRAM"               = "Diamond Stealth 64 DRAM"
    "Diamond Stealth Pro"                   = "Diamond Stealth Pro"
    "Diamond Stealth SE"                    = "Diamond Stealth SE"
    "Diamond Stealth Video 64"              = "Diamond Stealth Video 64"
    "Diamond Stealth Video 64 DRAM"         = "Diamond Stealth Video 64 DRAM"
    "Diamond Stealth VRAM"                  = "Diamond Stealth VRAM"
    "Diamond Viper PCI"                     = "Diamond Viper PCI"
    "Diamond Viper PRO"                     = "Diamond Viper PRO"
    "Diamond Viper SE"                      = "Diamond Viper SE"
    "Diamond Viper VLB"                     = "Diamond Viper VLB"
    "Digital PCXAG-AL"                      = "Digital PCXAG-AL"
    "Digital S3-928"                        = "Digital S3-928"
    "ELSA Winner 1000"                      = "ELSA Winner 1000"
    "Genoa VLB 8900VL Phantom 32i"          = "Genoa VLB 8900VL Phantom 32i"
    "Genoa PCI 8900 Phantom 32i"            = "Genoa PCI 8900 Phantom 32i"
    "Headless Server"                       = "Headless Server"
    "Hercules Dynamite Power"               = "Hercules Dynamite Power"
    "IBM XGA"                               = "IBM XGA"
    "IBM XGA-2"                             = "IBM XGA-2"
    "Matrox MGA Impression Plus"            = "Matrox MGA Impression Plus"
    "Matrox MGA Impression"                 = "Matrox MGA Impression"
    "Matrox MGA Ultima Plus"                = "Matrox MGA Ultima Plus"
    "Matrox MGA Ultima"                     = "Matrox MGA Ultima"
    "Media Vision Thunder & Lightning"      = "Media Vision Thunder & Lightning"
    "Metheus Premier 928"                   = "Metheus Premier 928"
    "MGA Compatible Graphics Adapter"       = "MGA Compatible Graphics Adapter"
    "Micronics VL-Bus"                      = "Micronics VL-Bus"
    "miroCRYSTAL 20SD"                      = "miroCRYSTAL 20SD"
    "NCR 32BLT"                             = "NCR 32BLT"
    "NCR 77C22"                             = "NCR 77C22"
    "NCR 77C22E"                            = "NCR 77C22E"
    "Orchid Fahrenheit 1280"                = "Orchid Fahrenheit 1280"
    "Orchid Fahrenheit 1280 Plus"           = "Orchid Fahrenheit 1280 Plus"
    "Orchid Fahrenheit VA"                  = "Orchid Fahrenheit VA"
    "Orchid Fahrenheit VA/VLB"              = "Orchid Fahrenheit VA/VLB"
    "Orchid Kelvin 64"                      = "Orchid Kelvin 64"
    "Orchid Kelvin EZ"                      = "Orchid Kelvin EZ"
    "Orchid ProDesigner 2"                  = "Orchid ProDesigner 2"
    "Orchid ProDesigner IIs"                = "Orchid ProDesigner IIs"
    "Paradise Windows Graphics Accelerator" = "Paradise Windows Graphics Accelerator"
    "S3 Compatible Graphics Adapter"        = "S3 Compatible Graphics Adapter"
    "STB Lightspeed"                        = "STB Lightspeed"
    "Trident 8900C"                         = "Trident 8900C"
    "Trident 9000"                          = "Trident 9000"
    "Trident Compatible Graphics Adapter"   = "Trident Compatible Graphics Adapter"
    "Tseng Labs ET4000"                     = "Tseng Labs ET4000"
    "Tseng Labs W32"                        = "Tseng Labs W32"
    "Video Seven VRAM I"                    = "Video Seven VRAM I"
    "Video Seven VRAM II"                   = "Video Seven VRAM II"
    "Video Seven VRAM II Ergo"              = "Video Seven VRAM II Ergo"
    "Weitek P9000 Graphics Adapter"         = "Weitek P9000 Graphics Adapter"
    "Weitek P9100 Graphics Adapter"         = "Weitek P9100 Graphics Adapter"
    "Western Digital Graphics Adapter"      = "Western Digital Graphics Adapter"
    "Wizard 9000VL"                         = "Wizard 9000VL"
    "VBE 1.2/2.0/3.0 Miniport"              = "VBE 1.2/2.0/3.0 Miniport"
[FontOptionsTextENG]
    "Small"  = "Small Fonts"
    "Large"  = "Large Fonts"
[ProgressCopyENG]
    ProCaption   = "Windows NT Setup"
    ProCancel    = "Cancel"
    ProCancelMsg = "Windows NT is not correctly installed.  Are you sure you want "+
                   "to cancel copying files?"
    ProCancelCap = "Setup Message"
    ProText1     = "Copying:"
    ProText2     = "To:"
[StringsENG]
    String1 = "Display"
    String2 = "Please enter the full path to the Windows NT Display "+
              "driver files.  If you want to install files from the "+
              "original Setup floppy disks, type a drive path (such "+
              "as A:\i386) and Setup will prompt you for the correct disk.  "+
              "Then choose Continue."
